https://total-qa.com/rest-api-automation-testing-tutorial-1-rest-assured-live-example/
https://total-qa.com/automate-coronavirus-covid19-rest-api-tutorial-part1/
https://total-qa.com/automate-coronavirus-covid19-rest-api-post-method-tutorial-part2/

PostMan:
1. creating global variables 
2. Envrionments 

CRUD
CREATE - POST
READ - GET
UPDATE - UPDATE
DELETE - DELETE

Client => Server ==>Validates => Database[CRUD] => fetchtes the data
Client			<=Server process the data


UI => Customers - 90 to 95 %
API => Customer Build their own UI 100% automation 

Swagger Documentation -> https://petstore.swagger.io/?_gl=1*4a91ab*_gcl_au*MjYxMTE2MDA5LjE3MDU0NTUxNTE.&_ga=2.55347368.2022657624.1705455149-828890238.1705455148#/pet/findPetsByStatus

Validation Points:
1. Response Code 
		100,200,300,400,500 Series of Error Codes 
		200 : Successful
		201 : Created
		404 : Page Not Found
		501 : Internal Error 
		301 : Moved Temporarily
		401 : Authenticaion Error 
		429 : Too Many Requests 
		
		
2. Response Body 
		https://jsonpath.com/
3. Response Headers
		Key Value
		


EMP: Select * from emp; => GET
Github REPO : https://github.com/sudheer51/restassured.git
Branch : Checking


	<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>5.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.3</version>

		</dependency>
=========
https://petstore.swagger.io/v2/pet/findByStatus?status=pending&queryparam2=value
https://petstore.swagger.io/v2/pet/findByStatus?status=available

select * from findByStatus table where status ='available';

RestAPI => Postman/Browser/SOAP UI/Rest Assured => Server => DB 

		JSON/XML/image	<=Client<=
		
GET - > SELECT
POST -> INSERT 
			insert into table employee (1,'John',35,'18-07-1986');
PUT -> UPDATE
DELTE-> DELETE

CRUD -> CREATE , READ, UPDATE ,DELETE 

https://petstore.swagger.io/v2/pet/findByStatus?status=available

Endpoint : https://petstore.swagger.io 
Resource URI : /v2/pet/findByStatus
Query Params: status=available 


Request URL
Request Headers
Authorization
		Basic Auth :
				USername
				Password: Token
=================
Response
	Response body has json details 
REsponse Headers 
Response Code 

Insert a Pet ID =>PetID 
2. Delete a Pet- PetID 

Co-relation 
  fetch_Access_toekn => TokenID
1. Get -> Access_Token